// Integration test configuration

configurations {
    itestCompile.extendsFrom testCompile
    itestRuntime.extendsFrom testRuntime
}

sourceSets {
    itest {
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
        scala.srcDir file('src/itest/scala')
    }

    // This is just to trick IntelliJ IDEA to add integration test
    // resources to classpath when running integration tests from
    // the IDE. It's is not a good solution but I don't know about
    // a better one.
    itest {
        resources.srcDir file('src/itest/resources')
    }
}

task itest(type: Test) {

    testClassesDir = sourceSets.itest.output.classesDir
    classpath = sourceSets.itest.runtimeClasspath

    // This is not needed, but I like to see which tests have run
    testLogging {
        events "passed", "skipped", "failed"
    }
}

task iscalaTest(dependsOn: ['itestClasses'], type: JavaExec) {
    main = 'org.scalatest.tools.Runner'
    args = ['-R', 'build/classes/itest', '-o']
    classpath = sourceSets.itest.runtimeClasspath
}

itest.dependsOn iscalaTest

scalaTest.dependsOn itest
